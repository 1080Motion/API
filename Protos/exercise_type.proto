syntax = "proto3";
package exercise_type;
option csharp_namespace = "TEM.Proto";
import "Protos/base.proto";

service ExerciseTypeService {
  rpc GetExerciseType (GetExerciseTypeRequest) returns (GetExerciseTypeResponse);
  rpc GetAllExerciseTypes (GetAllExerciseTypesRequest) returns (GetAllExerciseTypesResponse);
}


message ExerciseType {
  base.BaseProto common = 1;
  string instructor_guid = 2;       // Reference to the parent instructor who created this exercise type. If empty this exercise type is public.
  string name = 3;                  // Name of this exercise type
  string instructions = 4;          // Usage instructions for this exercise type
  bool is_bilateral = 5;            // True = bilateral, false = unilateral
  bool is_start_with_concentric = 6;  //True is repetition cycle is con-ecc, false if ecc-con
  string hyperlink = 7;             // Link to external url
  ArchType arch_type = 8;
}

message GetExerciseTypeRequest {
  string exercise_type_guid = 1;
}

message GetExerciseTypeResponse {
  ExerciseType exercise_type = 1;
}

message GetAllExerciseTypesRequest {
}

message GetAllExerciseTypesResponse {
  repeated ExerciseType exercise_types = 1;
}

message ArchType {
  string name = 1;
  PresentationType presentation_type = 2;  
}

enum PresentationType {
  REPETITIONS = 0;            // Repetitions are normally presented as bargraphs
  LINEAR = 1;                 // Used when running distances from point A to B
  CHANGE_OF_DIRECTION = 2;    // Used for shuttle-run type of exercises
}